{"version":3,"sources":["components/Dialogs/Chats/Chats.module.scss","components/Dialogs/Chats/Chat/Chat.module.scss","components/Dialogs/Messages/Messages.module.scss","components/Dialogs/Messages/Message/Message.module.scss","components/Dialogs/Dialogs.module.scss","components/Dialogs/Chats/Chat/Chat.jsx","components/Dialogs/Chats/ChatsContainer.jsx","components/Dialogs/Chats/Chats.jsx","components/Dialogs/Messages/Message/Message.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Messages/MessagesContainer.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx"],"names":["module","exports","container","navLink","active","name","listMessages","writeMessages","btnSend","myself","text","Chat","props","_props$chat","chat","id","photo","react_default","a","createElement","className","concat","s","react_router_dom","to","activeClassName","Avatar","size","src","ChatsContainer","connect","state","chats","dialogsPage","map","Chat_Chat","key","Message","message","user","idUser","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","required","MessagesContainer","messages","dispatch","sendMessage","newMessageText","sendMessageCreator","Message_Message","idMsg","values","AuthRedirectComponent","Component","RedirectComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","isAuth","react_router","React","auth"],"mappings":"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","file":"static/js/3.0f2272aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chats_container__2RFHA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chat_container__OyrlR\",\"navLink\":\"Chat_navLink__2r3Vn\",\"active\":\"Chat_active__AdyAC\",\"name\":\"Chat_name__2Wt8E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Messages_container__2KrhJ\",\"listMessages\":\"Messages_listMessages__2TzeX\",\"writeMessages\":\"Messages_writeMessages__lQJx8\",\"btnSend\":\"Messages_btnSend__uDe7g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__29Fio\",\"myself\":\"Message_myself__3anIb\",\"text\":\"Message_text__1vVYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialogs_container__3yuNV\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Avatar } from \"../../../common/Avatar/Avatar\";\nimport s from \"./Chat.module.scss\";\n\nexport const Chat = props => {\n  const {\n    chat: { name, id, photo }\n  } = props;\n\n  return (\n    <div className={`${s.container}`}>\n      <NavLink\n        to={`/messages/${id}`}\n        className={s.navLink}\n        activeClassName={s.active}\n      >\n        <Avatar size=\"sm\" src={photo} id={id} />\n        <span className={s.name}>{name}</span>\n      </NavLink>\n    </div>\n  );\n};\n","import { Chats } from \"./Chats\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return {\n    chats: state.dialogsPage.chats\n  };\n};\n\nexport const ChatsContainer = connect(mapStateToProps)(Chats);\n","import React from \"react\";\nimport s from \"./Chats.module.scss\";\nimport { Chat } from \"./Chat/Chat\";\n\n\nexport const Chats = props => {\n  const { chats } = props;\n  return (\n    <div className={`${s.container} customScrollbar`}>\n      {chats.map(chat => (\n        <Chat key={chat.id} chat={chat} />\n      ))}\n    </div>\n  );\n};","import React from \"react\";\nimport s from \"./Message.module.scss\";\nimport { Avatar } from \"../../../common/Avatar/Avatar\";\n\nconst defaultSrc =\n  \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRAJAKZq1P0A1fdBSNnqfQG-Hhu6X86SBL3gYO-497l-DTQjZYq&usqp=CAU\";\n\nexport const Message = props => {\n  const { message, user } = props;\n\n  return (\n    <div\n      className={`${s.container} ${user.id === message.idUser ? s.myself : \"\"}`}\n    >\n      <Avatar\n        size=\"sm\"\n        src={user.id === message.idUser ? user.photo : defaultSrc}\n        id={user.id}\n      />\n      <p className={s.text}>{message.text}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport s from \"./Messages.module.scss\";\nimport { Message } from \"./Message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\n\nconst maxLength50 = maxLengthCreator(50);\n\nexport const Messages = props => {\n  const { messages, user, sendMessage } = props;\n  // let textareaRef = React.createRef();\n  // let testRef = React.createRef();\n\n  // const onUpdateMessage = e => {\n  //   updateMessage(e.target.value);\n  // };\n\n  const onSendMessage = values => {\n    sendMessage(values.newMessageText);\n  };\n\n  return (\n    <div className={s.container}>\n      <div className={`${s.listMessages} customScrollbar`}>\n        {messages.map(message => (\n          <Message key={message.idMsg} message={message} user={user} />\n        ))}\n      </div>\n      <AddMessageFormRedux onSubmit={onSendMessage} />\n    </div>\n  );\n};\n\nconst AddMessageForm = props => {\n  return (\n      <form className={s.writeMessages} onSubmit={props.handleSubmit}>\n          <Field\n              component={TextArea}\n              name=\"newMessageText\"\n              className=\"textarea\"\n              placeholder=\"Enter your message\"\n              validate={[required, maxLength50]}\n          />\n          <button className={s.btnSend}>\n              send\n          </button>\n      </form>\n  )\n}\n\nconst AddMessageFormRedux = reduxForm({form:'dialogAddMessageForm'})(AddMessageForm);","import { Messages } from \"./Messages\";\nimport {sendMessageCreator} from \"../../redux/dialogs_reducer\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.dialogsPage.messages,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: newMessageText => {\n      dispatch(sendMessageCreator(newMessageText));\n    }\n  }\n};\n\nexport const MessagesContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Messages);\n","import React from \"react\";\nimport { ChatsContainer } from \"./Chats/ChatsContainer\";\nimport { MessagesContainer } from \"./Messages/MessagesContainer\";\nimport s from \"./Dialogs.module.scss\";\nimport {AuthRedirectComponent} from \"../../hoc/withAuthRedirect\";\n\nconst Dialogs = () => {\n  // const { store } = props;\n  // const {\n  //   dialogsPage: { dialogs }\n  // } = store.getState();\n\n\n  return (\n    <div className={s.container}>\n      <ChatsContainer />\n      <MessagesContainer />\n    </div>\n  );\n};\n\nexport default AuthRedirectComponent(Dialogs);\n","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport const AuthRedirectComponent = Component => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            return (\n                !this.props.isAuth\n                    ? <Redirect to={\"/login\"}/>\n                    : <Component {...this.props}/>\n            )\n        }\n    }\n\n    const MapStateToProps = state => ({isAuth: state.auth.isAuth});\n\n    const ConnectAuthRedirectComponent = connect(MapStateToProps) (RedirectComponent);\n\n    return ConnectAuthRedirectComponent;\n}"],"sourceRoot":""}