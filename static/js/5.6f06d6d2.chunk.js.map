{"version":3,"sources":["components/Login/Login.module.scss","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"names":["module","exports","container","summaryError","fieldBlock","btnSend","LoginReduxForm","reduxForm","form","_ref","isAuth","handleSubmit","error","captchaUrl","Object","objectWithoutProperties","react_default","a","createElement","react_router","to","className","s","onSubmit","Field","type","placeholder","name","component","Input","validate","required","Fragment","src","LoginContainerAPI","setLoginUser","props","assign","connect","state","auth"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,UAAA,yBAAAC,aAAA,4BAAAC,WAAA,0BAAAC,QAAA,yJC2BLC,EAAeC,YAAU,CAACC,KAAM,aAAjBD,CAtBV,SAAAE,GAAyD,IAAvDC,EAAuDD,EAAvDC,OAAQC,EAA+CF,EAA/CE,aAAcC,EAAiCH,EAAjCG,MAAOC,EAA0BJ,EAA1BI,WAA0BC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,gDACvE,OAAIC,EACOM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAI,aAIzBJ,EAAAC,EAAAC,cAAA,QAAMG,UAAWC,IAAEpB,UAAWqB,SAAUZ,GACnCC,GAASI,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAEnB,cAAeS,GAC3CI,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAElB,YAAYY,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAOC,KAAM,OAAOC,YAAY,QAAQC,KAAK,QAAQC,UAAWC,IAAOC,SAAU,CAACC,QAChHf,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAElB,YAAYY,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAOC,KAAK,WAAWC,YAAY,WAAWC,KAAK,WAAWC,UAAWC,IAAOC,SAAU,CAACC,QACzHf,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAElB,YAAYY,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAOC,KAAK,WAAWG,UAAW,QAASD,KAAK,eAA9E,eACAX,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAElB,YAAYY,EAAAC,EAAAC,cAAA,UAAQG,UAAWC,IAAEjB,SAArB,UAC7BQ,GACGG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KACIhB,EAAAC,EAAAC,cAAA,OAAKe,IAAKpB,IACVG,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAElB,YAAYY,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAOC,KAAM,OAAOC,YAAY,UAAUC,KAAK,UAAUC,UAAWC,IAAOC,SAAU,CAACC,4EChB7H,IAAMG,EAAoB,SAAAzB,GAA6B,IAA3B0B,EAA2B1B,EAA3B0B,aAAgBC,EAAWtB,OAAAC,EAAA,EAAAD,CAAAL,EAAA,kBAE7D,OACOO,EAAAC,EAAAC,cAACZ,EAADQ,OAAAuB,OAAA,CAAgBd,SAAUY,GAAkBC,KAOrCE,sBAHS,SAAAC,GAAK,MAAK,CAAC7B,OAAQ6B,EAAMC,KAAK9B,OAAQG,WAAY0B,EAAMC,KAAK3B,aAG7C,CAACsB,kBAA1BG,CAAyCJ","file":"static/js/5.6f06d6d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__3AZ_p\",\"summaryError\":\"Login_summaryError__23Jw6\",\"fieldBlock\":\"Login_fieldBlock__9Xf5m\",\"btnSend\":\"Login_btnSend__3YTqf\"};","import React from \"react\";\nimport s from \"./Login.module.scss\";\nimport {Field, reduxForm} from \"redux-form\"\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {Redirect} from \"react-router-dom\";\nconst LoginForm = ({isAuth, handleSubmit, error, captchaUrl, ...props}) => {\n    if (isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n  return (\n    <form className={s.container} onSubmit={handleSubmit}>\n        {error && <div className={s.summaryError}>{error}</div>}\n        <div className={s.fieldBlock}><Field type= \"text\" placeholder=\"login\" name=\"email\" component={Input} validate={[required]} /></div>\n        <div className={s.fieldBlock}><Field type=\"password\" placeholder=\"Password\" name=\"password\" component={Input} validate={[required]} /></div>\n        <div className={s.fieldBlock}><Field type=\"checkbox\" component={\"input\"} name=\"rememberMe\" />Remember me</div>\n        <div className={s.fieldBlock}><button className={s.btnSend}>Login</button></div>\n        {captchaUrl && (\n            <>\n                <img src={captchaUrl} />\n                <div className={s.fieldBlock}><Field type= \"text\" placeholder=\"captcha\" name=\"captcha\" component={Input} validate={[required]} /></div>\n            </>\n            )}\n    </form>\n  );\n};\n//a unique name for the form\nexport const LoginReduxForm=reduxForm({form: 'loginUser'})(LoginForm);","import React from \"react\";\nimport {LoginReduxForm} from \"./Login\";\nimport {connect} from \"react-redux\";\nimport {setLoginUser} from \"../redux/auth_reducer\";\n\nexport const LoginContainerAPI = ({setLoginUser,...props}) => {\n    // const onSubmit = formData => props.setLoginUser(formData);\n return (\n        <LoginReduxForm onSubmit={setLoginUser} {...props}/>\n    );\n}\n\nconst mapStateToProps = state => ({isAuth: state.auth.isAuth, captchaUrl: state.auth.captchaUrl});\n\n\nexport default connect(mapStateToProps, {setLoginUser})(LoginContainerAPI);\n"],"sourceRoot":""}